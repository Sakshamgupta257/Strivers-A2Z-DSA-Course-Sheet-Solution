//C++ -->

int missingK(vector < int > vec, int n, int k) {
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        int missing=vec[mid]-(mid+1);
        if(missing<k){
            low=mid+1;
        }else{
            high=mid-1;
        }
    }
    return high+1+k;
}

//Java -->

public class Solution {
    public static int missingK(int[] arr, int n, int k) {
        int low=0, high=n-1;

        while(low <= high){
            int mid = (low + high)/2;
            int missing = arr[mid] - mid - 1;

            if(missing < k) 
               low = mid+1;

            else
               high = mid-1;
        }
        return high+k+1;
    }
}
