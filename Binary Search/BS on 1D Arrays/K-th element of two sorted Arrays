//C++ -->

#include<bits/stdc++.h>
int kthElement(vector<int> &nums1, vector<int>& nums2, int n, int m, int k){
  if (k > n + m) {
    return -1;
  }
  if (n > m) {
    return kthElement(nums2, nums1, m, n, k);
  }
    int low = max(0,k-m), end = min(k,n);
    while(low<=end){
        int cut1=(end+low)/2;
        int cut2=k-cut1;
        int l1=(cut1==0) ?INT_MIN:nums1[cut1-1];
        int l2=(cut2==0) ?INT_MIN:nums2[cut2-1];
        int r1=(cut1==n) ?INT_MAX:nums1[cut1];
        int r2=(cut2==m) ?INT_MAX:nums2[cut2];
        if(l1<=r2 and l2<=r1){
            return (max(l1,l2));
        } else if (l1 > r2) {
          end = cut1 - 1;
        } else {
          low = cut1 + 1;
        }
    }
    return 0;
}

//Java -->

