//C++ -->

#include <bits/stdc++.h> 
pair<int, int> search(vector<vector<int>> matrix, int x)
{
   int rows = matrix.size();
   int cols = matrix[0].size();
   int rowIndex = 0;
   int colIndex = cols-1;

   pair<int,int>ans{-1,-1};

   while(rowIndex <rows && colIndex >= 0){
       int element = matrix[rowIndex][colIndex];

       if(element == x){
           ans.first = rowIndex;
           ans.second = colIndex;
           return ans;
         
       }
       else if(element > x){
           colIndex--;
       }
       else{
           rowIndex++;
       }
   }
  
   return ans;

}

//Java -->

import java.util.* ;
import java.io.*; 
/*************************************
 
    Following is the Pair Class structure.
    
    class Pair{
        int x; int y;
        
        Pair(int x, int y){
            this.x = x;
            this.y = y;
        }
    }

*************************************/

public class Solution {
	public static Pair search(int [][] matrix, int x) {
		// Write your code here.
        int n=matrix.length;
        int m=matrix[0].length;
        int row=0;
        int col=m-1;

        while((row>=0 && row<n) && (col>=0 && col<m)){
            if(matrix[row][col] == x){
                return new Pair(row,col);
            }
            else if(matrix[row][col] > x){
                col--;
            }
            else{
                row++;
            }
        }
        return new Pair(-1,-1);
	}
}
