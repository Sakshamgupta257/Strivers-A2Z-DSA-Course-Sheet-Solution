//C++ -->

/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *deleteLast(Node *list){
    Node*head=list; 
    Node* prev = nullptr; 
    while(head->next!=nullptr){
        prev=head; 
        head=head->next;
    } 
    prev->next=NULL; 
    delete(head); 
    return list;
}

//Java -->


/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;

     Node()
     {
         this.data = 0;
         this.next = null;
     }

     Node(int data)
     {
         this.data = data;
         this.next = null;
     }

     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
     }
 };

 *****************************************************************/

public class Solution {
    public static Node deleteLast(Node list){
       Node head = list;
       Node prev = null;

       while (head.next != null) {
          prev = head;
          head = head.next;
        }

        prev.next = null;
        head = null;
        return list;
    }
}
