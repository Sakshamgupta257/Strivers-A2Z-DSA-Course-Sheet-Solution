//C++ -->

#include<bits/stdc++.h>

void mergeTwoSortedArraysWithoutExtraSpace(vector<long long> &arr1, vector<long long> &arr2){
	int n=arr1.size();
	int m=arr2.size();
	int left = n - 1;
	int right=0;
    while (left >= 0 && right < m) {
        if (arr1[left] > arr2[right]) {
            swap(arr1[left], arr2[right]);
            left--, right++;
        }
        else {
            break;
        }
    }
    sort(arr1.begin(),arr1.end());
    sort(arr2.begin(),arr2.end());
}

//Java -->

import java.util.*;
public class Solution {
    public static void mergeTwoSortedArraysWithoutExtraSpace(long []arr1, long []arr2){
        int n = arr1.length;
        int m = arr2.length;
        
        int left = n-1;
        int right = 0;
        while(left >= 0 && right < m){
            if(arr1[left] > arr2[right]){
                long temp = arr1[left];
                arr1[left] =  arr2[right];
                arr2[right] = temp;
                left--; right++;
            }
            else{
                break;
            }
        }
            Arrays.sort(arr1);
            Arrays.sort(arr2);
    }
}
